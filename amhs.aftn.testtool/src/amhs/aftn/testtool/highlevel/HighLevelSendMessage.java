/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package amhs.aftn.testtool.highlevel;

import com.isode.x400.highlevel.BodypartGeneralText;
import com.isode.x400.highlevel.BodypartIA5Text;
import com.isode.x400.highlevel.P3BindSession;
import com.isode.x400.highlevel.P7BindSession;
import com.isode.x400.highlevel.X400APIException;
import com.isode.x400.highlevel.X400Msg;
import com.isode.x400api.AMHS_att;
import com.isode.x400api.X400_att;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author andh
 */
public class HighLevelSendMessage extends javax.swing.JFrame {

    private HighLevelSendingConfig config;
    private SimpleDateFormat filingTimeFormat = new SimpleDateFormat("ddHHmm");

    /**
     * Creates new form HighLevelSendMessage
     */
    public HighLevelSendMessage() {
        initComponents();

        this.config = (HighLevelSendingConfig) XmlSerializer.deserialize("config/config.xml", HighLevelSendingConfig.class);
        // Load address
        for (String add : this.config.getAddresses()) {
            cboFrom.addItem(add);
        }

        // Load priority
        cboPriority.addItem("SS");
        cboPriority.addItem("DD");
        cboPriority.addItem("FF");
        cboPriority.addItem("GG");
        cboPriority.addItem("KK");

        this.txtFilingTime.setText(filingTimeFormat.format(new Date()));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtContent = new javax.swing.JTextArea();
        rdbP3 = new javax.swing.JRadioButton();
        rdbP7 = new javax.swing.JRadioButton();
        cboFrom = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        txtSubject = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblFilingTime = new javax.swing.JLabel();
        txtFilingTime = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cboPriority = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        txtOptionHeading = new javax.swing.JTextField();
        lblOHCount = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        cbxImpConversionProhibited = new javax.swing.JCheckBox();
        cbxConversionWithLossProhibited = new javax.swing.JCheckBox();
        cboContentype = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        btnSend = new javax.swing.JButton();
        btnTO = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        txtRepeat = new javax.swing.JTextField();
        cbxAddBodyPart = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mnuConfig = new javax.swing.JMenuItem();
        mnuReload = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtContent.setColumns(20);
        txtContent.setRows(5);
        jScrollPane1.setViewportView(txtContent);

        rdbP3.setText("P3");

        rdbP7.setText("P7");

        txtAddress.setColumns(20);
        txtAddress.setRows(5);
        jScrollPane2.setViewportView(txtAddress);

        jLabel2.setText("Subject");

        jLabel3.setText("Content");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblFilingTime.setText("Filing Time");
        lblFilingTime.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblFilingTime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblFilingTimeMouseClicked(evt);
            }
        });

        jLabel5.setText("Priority");

        jLabel6.setText("Option Heading");

        txtOptionHeading.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtOptionHeadingKeyReleased(evt);
            }
        });

        lblOHCount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOHCount.setText("00");
        lblOHCount.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtOptionHeading)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblFilingTime)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFilingTime, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblOHCount, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboPriority, 0, 116, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblFilingTime)
                    .addComponent(txtFilingTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(cboPriority, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel6)
                    .addComponent(lblOHCount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtOptionHeading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cbxImpConversionProhibited.setText("implicitconversion- prohibited");

        cbxConversionWithLossProhibited.setText("conversion with loss prohibited");

        cboContentype.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "22", "35", "2" }));

        jLabel1.setText("Content-type");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbxImpConversionProhibited)
                    .addComponent(cbxConversionWithLossProhibited)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboContentype, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbxImpConversionProhibited)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxConversionWithLossProhibited)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboContentype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        btnTO.setText("To");
        btnTO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTOActionPerformed(evt);
            }
        });

        txtRepeat.setText("1");

        cbxAddBodyPart.setText("Add bodypart");

        jMenu1.setText("File");

        jMenuItem1.setText("jMenuItem1");
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        mnuConfig.setText("Configuration");
        mnuConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuConfigActionPerformed(evt);
            }
        });
        jMenu2.add(mnuConfig);

        mnuReload.setText("Reload configuration");
        mnuReload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuReloadActionPerformed(evt);
            }
        });
        jMenu2.add(mnuReload);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rdbP3)
                                .addGap(18, 18, 18)
                                .addComponent(rdbP7)
                                .addGap(18, 18, 18)
                                .addComponent(cboFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1)
                            .addComponent(txtSubject)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxAddBodyPart))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnTO)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtRepeat, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSend)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdbP3)
                            .addComponent(rdbP7)
                            .addComponent(cboFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTO)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addComponent(txtSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cbxAddBodyPart))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSend)
                    .addComponent(txtRepeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuConfigActionPerformed
        ConfigGUI configGui = new ConfigGUI(this, true);
        configGui.setLocationRelativeTo(this);
        configGui.setVisible(true);
    }//GEN-LAST:event_mnuConfigActionPerformed

    private void txtOptionHeadingKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOptionHeadingKeyReleased
        this.lblOHCount.setText(txtOptionHeading.getText().length() + "");
    }//GEN-LAST:event_txtOptionHeadingKeyReleased

    private void lblFilingTimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFilingTimeMouseClicked
        this.txtFilingTime.setText(filingTimeFormat.format(new Date()));
    }//GEN-LAST:event_lblFilingTimeMouseClicked

    private void btnTOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTOActionPerformed
        AddressSelection selectionForm = new AddressSelection(this, true, this.config.getAddresses());
        selectionForm.add(new ActionPerform() {

            @Override
            public void actionPerform(String addres) {
                txtAddress.append(addres + "\n");
            }
        });

        selectionForm.setLocationRelativeTo(this);
        selectionForm.setVisible(true);
    }//GEN-LAST:event_btnTOActionPerformed

    private void mnuReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuReloadActionPerformed
        this.config = (HighLevelSendingConfig) XmlSerializer.deserialize("config/config.xml", HighLevelSendingConfig.class);
        // Load address
        cboFrom.removeAllItems();
        for (String add : this.config.getAddresses()) {
            cboFrom.addItem(add);
        }
    }//GEN-LAST:event_mnuReloadActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
        String or = (String) cboFrom.getSelectedItem();
        P3BindSession bindSession = createConnection(rdbP3.isSelected(), or);

        if (bindSession == null) {
            return;
        }

        try {

            /*
            X400Msg x400msg = new X400Msg(bindSession);
            x400msg.setFrom(or);
            String[] adds = this.txtAddress.getText().split("\n");
            int index = 1;
            for (String add : adds) {
                if (add.isEmpty()) {
                    continue;
                }

                x400msg.setTo(add, X400Msg.DR_Request.DR_NO_REPORT, index);
                index++;
            }
            x400msg.setSubject(txtSubject.getText());

            BodypartIA5Text ia5 = new BodypartIA5Text(txtContent.getText());
            x400msg.addBodypart(ia5);

            x400msg.setIntParam(X400_att.X400_N_CONTENT_TYPE, 22);

            setStr(x400msg, AMHS_att.ATS_S_PRIORITY_INDICATOR, (String) cboPriority.getSelectedItem());
            setStr(x400msg, AMHS_att.ATS_S_FILING_TIME, txtFilingTime.getText());
            setStr(x400msg, AMHS_att.ATS_S_TEXT, txtContent.getText());
            setStr(x400msg, AMHS_att.ATS_S_OPTIONAL_HEADING_INFO, txtOptionHeading.getText());

            int implicit = this.cbxImpConversionProhibited.isSelected() ? 1 : 0;
            setInt(x400msg, X400_att.X400_N_IMPLICIT_CONVERSION_PROHIBITED, implicit);

            x400msg.sendMsg(bindSession);
            */
            Integer loop = Integer.parseInt(txtRepeat.getText());

            for (int i = 0; i < loop; i++) {
                sendMsg(bindSession, or);
		try {
		    Thread.sleep(100);
		} catch (InterruptedException ex) {
		    Logger.getLogger(HighLevelSendMessage.class.getName()).log(Level.SEVERE, null, ex);
		}
            }

            // Unbind cleanly from the Message Store
            bindSession.unbind();

            JOptionPane.showMessageDialog(this, "Send OK");

        } catch (X400APIException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            ex.printStackTrace();
        }

    }//GEN-LAST:event_btnSendActionPerformed

    private void sendMsg(P3BindSession bindSession, String or) {

        try {

            X400Msg x400msg = new X400Msg(bindSession);
            x400msg.setFrom(or);
            String[] adds = this.txtAddress.getText().split("\n");
            int index = 1;
            for (String add : adds) {
                if (add.isEmpty()) {
                    continue;
                }

                x400msg.setTo(add, X400Msg.DR_Request.DR_NON_DELIVERY_REPORT, index);
                index++;
            }
            x400msg.setSubject(txtSubject.getText());
            
            // BodypartIA5Text ia6 = new BodypartIA5Text(txtContent.getText());
            // x400msg.addBodypart(ia6);
            // x400msg.setIntParam(X400_att.X400_N_CONTENT_TYPE, 22);

            setStr(x400msg, AMHS_att.ATS_S_PRIORITY_INDICATOR, (String) cboPriority.getSelectedItem());
            setStr(x400msg, AMHS_att.ATS_S_FILING_TIME, txtFilingTime.getText());
            setStr(x400msg, AMHS_att.ATS_S_TEXT, txtContent.getText());
            setStr(x400msg, AMHS_att.ATS_S_OPTIONAL_HEADING_INFO, txtOptionHeading.getText());
	    setInt(x400msg, AMHS_att.ATS_N_EXTENDED, 1);
            
            if (cbxAddBodyPart.isSelected()) {
                BodypartIA5Text ia5 = new BodypartIA5Text(txtContent.getText());
                x400msg.addBodypart(ia5);
            }

            int implicit = this.cbxImpConversionProhibited.isSelected() ? 1 : 0;
            setInt(x400msg, X400_att.X400_N_IMPLICIT_CONVERSION_PROHIBITED, implicit);
            
            int conversionWithLoss = this.cbxConversionWithLossProhibited.isSelected() ? 1 : 0;
            setInt(x400msg, X400_att.X400_N_CONVERSION_WITH_LOSS_PROHIBITED, conversionWithLoss);
            
            int contentType = Integer.parseInt((String) cboContentype.getSelectedItem());
            setInt(x400msg, X400_att.X400_N_CONTENT_TYPE, contentType);
            
            setStr(x400msg, X400_att.X400_S_ORIGINAL_ENCODED_INFORMATION_TYPES, "ia5-text");

            x400msg.sendMsg(bindSession);
            
        } catch (X400APIException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            ex.printStackTrace();
        }
    }
    
    private void setStr(X400Msg x400, int attribute, String param) {
        if (param == null || param.isEmpty()) {
            return;
        }

        try {
            x400.setStringparam(attribute, param);
        } catch (X400APIException ex) {
            ex.printStackTrace();
        }
    }

    private void setInt(X400Msg x400, int attribute, Integer param) {
        if (param == null) {
            return;
        }

        try {
            x400.setIntParam(attribute, param);
        } catch (X400APIException ex) {
            ex.printStackTrace();
        }
    }

    /**
     * Create connection
     *
     * @param useP3
     * @param orAddress
     * @return
     */
    private P3BindSession createConnection(boolean useP3, String orAddress) {
        try {
            if (useP3) {
                P3BindSession connection = new P3BindSession(this.config.getP3PresentationAddress(), orAddress, this.config.getP3Password(), true);
                // Bind to the P3 Channel
                connection.bind();
                return connection;
            }

            // Create a new P7 bind session object with the session values necessary for the bind
            P7BindSession connection = new P7BindSession(this.config.getP7PresentationAddress(), orAddress, this.config.getP7Password());
            // Bind to the P7 Message Store
            connection.bind();
            return connection;
        } catch (X400APIException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            return null;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HighLevelSendMessage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HighLevelSendMessage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnTO;
    private javax.swing.JComboBox cboContentype;
    private javax.swing.JComboBox cboFrom;
    private javax.swing.JComboBox cboPriority;
    private javax.swing.JCheckBox cbxAddBodyPart;
    private javax.swing.JCheckBox cbxConversionWithLossProhibited;
    private javax.swing.JCheckBox cbxImpConversionProhibited;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblFilingTime;
    private javax.swing.JLabel lblOHCount;
    private javax.swing.JMenuItem mnuConfig;
    private javax.swing.JMenuItem mnuReload;
    private javax.swing.JRadioButton rdbP3;
    private javax.swing.JRadioButton rdbP7;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextArea txtContent;
    private javax.swing.JTextField txtFilingTime;
    private javax.swing.JTextField txtOptionHeading;
    private javax.swing.JTextField txtRepeat;
    private javax.swing.JTextField txtSubject;
    // End of variables declaration//GEN-END:variables
}
